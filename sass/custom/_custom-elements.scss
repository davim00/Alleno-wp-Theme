// Adding basic Wordpress classes to pass the Wordpress.org tests
.sticky,
.gallery-caption,
.bypostauthor {
  font-size: inherit;
}

// Necessary WP classes
.wp-caption { font-size: inherit; }

.wp-caption-text { font-size: inherit; }

.screen-reader-text { font-size: inherit; }

.alignright {
  float: right;
  padding-left: 10px;
}

.alignleft {
  float: left;
  padding-right: 10px;
}

.aligncenter { margin: 0px auto; }

// Limit featured image size to 100%
img.wp-post-image,
article img,
figure,
img,
#secondary img {
  max-width: 100%;
  height: auto;
}

// Make featured image have 0 margin
img.wp-post-image {
  margin-left: -(($grid-gutter-width));
  margin-right: -(($grid-gutter-width));
}

// Style image captions
.wp-caption {
  margin-bottom: (($line-height-computed / 2));

  .wp-caption-text {
    letter-spacing: 0.03em;
    font-size: floor(($font-size-base * 0.75));
    color: $gray;
    margin: (($line-height-computed / 3)) 0 0;
  }
}

// Widgets
.widget {
	margin: 0 0 1.5em;
  word-wrap: break-word;

  .widget-title {
    margin-top: 0;
  }

	/* Make sure select elements fit in widgets. */
	select {
		max-width: 100%;
	}
}

// Comments
.comment-content a {
	word-wrap: break-word;
}
.bypostauthor {
	display: block;
}



// Infinate scroll
/* Globally hidden elements when Infinite Scroll is supported and in use. */
.infinite-scroll .posts-navigation, /* Older / Newer Posts Navigation (always hidden) */
.infinite-scroll.neverending .site-footer { /* Theme Footer (when set to scrolling) */
	display: none;
}

/* When Infinite Scroll has reached its end we need to re-display elements that were hidden (via .neverending) before. */
.infinity-end.neverending .site-footer {
	display: block;
}



// Links

a {
  color: $link-color;
  text-decoration: none;
  @include element-transition(all, 300ms, ease);

  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    @include tab-focus;
  }
}



// Buttons
/* Style links as buttons */
.button {
  display: inline-block;
  font-weight: $btn-font-weight;
  font-size: floor($font-size-base * 0.8);
  text-transform: uppercase;
  letter-spacing: 0.04em;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  padding: $padding-base-vertical $padding-base-horizontal;
  margin: 0;
  border: 1px solid $btn-default-border;
  border-radius: $border-radius-base;
  @include element-transition(all, 300ms, ease);
}

// Reset rounded corners
.input-group-btn:first-child > .button,
.input-group-btn:first-child > .btn-group > .button,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .button:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .button {
  @include border-right-radius(0);
}

.input-group-btn:last-child > .button,
.input-group-btn:last-child > .btn-group > .button,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .button:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .button {
  @include border-left-radius(0);
}

.button-standard {
  @include button-variant($btn-standard-color, $btn-standard-bg, $btn-standard-border);
}

.button-default {
  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
}

.button-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large);
}
.button-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}
.button-xs {
  @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}


// Social Media widget
.smart-social-media-widget {
  display: inline-block;
  margin-bottom: $line-height-computed !important;

  .ssmw-boxed.ssmw-icon-20px {
    margin: 0 12px 0 0;

    &:last-of-type {
      margin: 0;
    }
  }

  a.ssmw-boxed {
    background: $gray-dark;

    &:hover,
    &:active {
      background: $gray;
    }
  }
}

// Jumbotron

.jumbotron {
  margin-bottom: $grid-gutter-width;

  h2,
  .h2 {
    color: $jumbotron-heading-color;
    margin-top: 0;
  }

  @media screen and (min-width: $screen-sm-min) {

    h2,
    .h2 {
      font-size: $jumbotron-heading-font-size;
    }
  }
}

.jumbotron-front {
  text-align: center;
  padding: (($grid-gutter-width * 4)) 0;
  background-size: cover;
  background-repeat: no-repeat;
}


// Make block element size out of margin

.no-margin {
  margin-left: -(($grid-gutter-width));
  margin-right: -(($grid-gutter-width));

  @media (max-width: $grid-float-breakpoint-max) {
    margin-left: -(($grid-gutter-width / 3));
    margin-right: -(($grid-gutter-width / 3));
  }
}

// Make rows & containers inverse

.inverse {
  background-color: $gray-darker;
  color: $gray;
  border-color: $gray-darker;

  h1, h2, h3, h4 ,h5, h6,
  .h1, .h2, .h3, .h4, .h5, .h6 {
    color: $gray;
  }

  a {
    color: $gray-lighter;

    &:hover,
    &:focus {
      color: lighten($gray-lighter, 10%);
    }
  }
}
